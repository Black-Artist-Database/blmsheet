steps:
# Build the container image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/$_IMAGE_NAME:$COMMIT_SHA', '-t', 'gcr.io/$PROJECT_ID/$_IMAGE_NAME:latest', '.']
# Push the image to Container Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/$_IMAGE_NAME']
# Deploy image to Cloud Run #1
- name: 'gcr.io/cloud-builders/gcloud'
  args:
  - 'run'
  - 'deploy'
  - '$_SERVICE_NAME1'
  - '--image'
  - 'gcr.io/$PROJECT_ID/$_IMAGE_NAME:latest'
  - '--region'
  - '$_REGION1'
  - '--platform'
  - 'managed'
# Deploy image to Cloud Run #2
- name: 'gcr.io/cloud-builders/gcloud'
  args:
  - 'run'
  - 'deploy'
  - '$_SERVICE_NAME2'
  - '--image'
  - 'gcr.io/$PROJECT_ID/$_IMAGE_NAME:latest'
  - '--region'
  - '$_REGION2'
  - '--platform'
  - 'managed'
# Deploy image to Cloud Run #3
- name: 'gcr.io/cloud-builders/gcloud'
  args:
  - 'run'
  - 'deploy'
  - '$_SERVICE_NAME3'
  - '--image'
  - 'gcr.io/$PROJECT_ID/$_IMAGE_NAME:latest'
  - '--region'
  - '$_REGION3'
  - '--platform'
  - 'managed'
# Deploy image to Cloud Run #4
- name: 'gcr.io/cloud-builders/gcloud'
  args:
  - 'run'
  - 'deploy'
  - '$_SERVICE_NAME4'
  - '--image'
  - 'gcr.io/$PROJECT_ID/$_IMAGE_NAME:latest'
  - '--region'
  - '$_REGION4'
  - '--platform'
  - 'managed'
# Clear cache on successful deployment
- name: 'gcr.io/cloud-builders/gcloud'
  args:
  - 'scheduler'
  - 'jobs'
  - 'run'
  - 'clear-cache'
# Deploy scrape to Cloud Function
- name: 'gcr.io/cloud-builders/gcloud'
  args:
  - 'functions'
  - 'deploy'
  - '$_FUNCTION_NAME'
  - '--source'
  - './function/'
  - '--runtime'
  - 'python37'
  - '--trigger-topic'
  - '$_TOPIC_NAME'
  - '--timeout'
  - '60'
  - '--entry-point'
  - 'scrape_and_update_bandcamp_details'
  - '--memory'
  - '256MB'
images:
- gcr.io/$PROJECT_ID/$_IMAGE_NAME
